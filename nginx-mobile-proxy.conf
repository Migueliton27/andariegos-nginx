events {
    worker_connections 512;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    server_tokens off;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    client_max_body_size 10M;

    upstream mobile_api_gateway {
        server nginx-lb:80;
    }

    server {
        listen 8080;
        server_name localhost;

        # Health check
        location = /mobile-health {
            return 200 "Mobile Proxy OK\n";
            add_header Content-Type text/plain;
        }

        # API routes - MUST be before location /
        location /api/ {
            if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*" always;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header Access-Control-Allow-Headers 'Authorization, Content-Type' always;
                return 204;
            }

            proxy_pass http://mobile_api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        }

        # Default location - MUST be last
        location / {
            return 404 "API endpoint not found\n";
            add_header Content-Type text/plain;
        }
    }
} 